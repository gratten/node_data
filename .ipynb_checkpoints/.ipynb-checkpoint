{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 186,
   "metadata": {},
   "outputs": [],
   "source": [
    "import sqlite3\n",
    "import pandas as pd\n",
    "from datetime import datetime\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 187,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create your connection.\n",
    "cnx = sqlite3.connect('db.sqlite3')\n",
    "\n",
    "htlc_df = pd.read_sql_query(\"SELECT * FROM gui_failedhtlcs\", cnx)\n",
    "fwds_df = pd.read_sql_query(\"SELECT * FROM gui_forwards\", cnx)\n",
    "\n",
    "htlc_df['timestamp'] = pd.to_datetime(htlc_df['timestamp'])\n",
    "htlc_df = htlc_df.set_index('timestamp')\n",
    "\n",
    "fwds_df['forward_date'] = pd.to_datetime(fwds_df['forward_date'])\n",
    "fwds_df = fwds_df.set_index('forward_date')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 188,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>amount</th>\n",
       "      <th>chan_id_in</th>\n",
       "      <th>chan_id_out</th>\n",
       "      <th>chan_in_alias</th>\n",
       "      <th>chan_out_alias</th>\n",
       "      <th>wire_failure</th>\n",
       "      <th>failure_detail</th>\n",
       "      <th>missed_fee</th>\n",
       "      <th>chan_out_liq</th>\n",
       "      <th>chan_out_pending</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>timestamp</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2022-07-08 21:31:35.604996</th>\n",
       "      <td>1</td>\n",
       "      <td>70004</td>\n",
       "      <td>818212573014982656</td>\n",
       "      <td>818231264697122816</td>\n",
       "      <td>WalletOfSatoshi.com</td>\n",
       "      <td>cornhauler.express</td>\n",
       "      <td>18</td>\n",
       "      <td>1</td>\n",
       "      <td>0.070</td>\n",
       "      <td>2497139.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-07-08 22:25:56.925155</th>\n",
       "      <td>2</td>\n",
       "      <td>206595</td>\n",
       "      <td>817425322679402496</td>\n",
       "      <td>818055342850310145</td>\n",
       "      <td>LightningNetwork.Plus</td>\n",
       "      <td>outsidia-ln-node</td>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>41.319</td>\n",
       "      <td>500000.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-07-09 01:44:10.187998</th>\n",
       "      <td>3</td>\n",
       "      <td>98841</td>\n",
       "      <td>818254354464112641</td>\n",
       "      <td>818055342850310145</td>\n",
       "      <td>BCash_Is_Trash</td>\n",
       "      <td>outsidia-ln-node</td>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>19.768</td>\n",
       "      <td>500000.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-07-09 02:13:31.228147</th>\n",
       "      <td>4</td>\n",
       "      <td>222517</td>\n",
       "      <td>817901411243655168</td>\n",
       "      <td>818055342850310145</td>\n",
       "      <td>MUISCA</td>\n",
       "      <td>outsidia-ln-node</td>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>44.503</td>\n",
       "      <td>500000.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-07-09 02:15:04.931164</th>\n",
       "      <td>5</td>\n",
       "      <td>555555</td>\n",
       "      <td>817437417321398273</td>\n",
       "      <td>818212573014982656</td>\n",
       "      <td>needleInTheHay</td>\n",
       "      <td>WalletOfSatoshi.com</td>\n",
       "      <td>15</td>\n",
       "      <td>6</td>\n",
       "      <td>55.556</td>\n",
       "      <td>527680.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                            id  amount          chan_id_in  \\\n",
       "timestamp                                                    \n",
       "2022-07-08 21:31:35.604996   1   70004  818212573014982656   \n",
       "2022-07-08 22:25:56.925155   2  206595  817425322679402496   \n",
       "2022-07-09 01:44:10.187998   3   98841  818254354464112641   \n",
       "2022-07-09 02:13:31.228147   4  222517  817901411243655168   \n",
       "2022-07-09 02:15:04.931164   5  555555  817437417321398273   \n",
       "\n",
       "                                   chan_id_out          chan_in_alias  \\\n",
       "timestamp                                                               \n",
       "2022-07-08 21:31:35.604996  818231264697122816    WalletOfSatoshi.com   \n",
       "2022-07-08 22:25:56.925155  818055342850310145  LightningNetwork.Plus   \n",
       "2022-07-09 01:44:10.187998  818055342850310145         BCash_Is_Trash   \n",
       "2022-07-09 02:13:31.228147  818055342850310145                 MUISCA   \n",
       "2022-07-09 02:15:04.931164  818212573014982656         needleInTheHay   \n",
       "\n",
       "                                 chan_out_alias  wire_failure  failure_detail  \\\n",
       "timestamp                                                                       \n",
       "2022-07-08 21:31:35.604996   cornhauler.express            18               1   \n",
       "2022-07-08 22:25:56.925155     outsidia-ln-node            12               1   \n",
       "2022-07-09 01:44:10.187998     outsidia-ln-node            12               1   \n",
       "2022-07-09 02:13:31.228147     outsidia-ln-node            12               1   \n",
       "2022-07-09 02:15:04.931164  WalletOfSatoshi.com            15               6   \n",
       "\n",
       "                            missed_fee  chan_out_liq  chan_out_pending  \n",
       "timestamp                                                               \n",
       "2022-07-08 21:31:35.604996       0.070     2497139.0               0.0  \n",
       "2022-07-08 22:25:56.925155      41.319      500000.0               0.0  \n",
       "2022-07-09 01:44:10.187998      19.768      500000.0               0.0  \n",
       "2022-07-09 02:13:31.228147      44.503      500000.0               0.0  \n",
       "2022-07-09 02:15:04.931164      55.556      527680.0               0.0  "
      ]
     },
     "execution_count": 188,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "htlc_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 189,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>chan_id_in</th>\n",
       "      <th>chan_in_alias</th>\n",
       "      <th>chan_out_alias</th>\n",
       "      <th>amt_in_msat</th>\n",
       "      <th>amt_out_msat</th>\n",
       "      <th>fee</th>\n",
       "      <th>chan_id_out</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>forward_date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2022-07-07 23:53:21</th>\n",
       "      <td>1</td>\n",
       "      <td>817901411243655168</td>\n",
       "      <td>MUISCA</td>\n",
       "      <td>ZerofeeCLN</td>\n",
       "      <td>72001792</td>\n",
       "      <td>72001720</td>\n",
       "      <td>0.072</td>\n",
       "      <td>817904709708283904</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-07-07 23:53:36</th>\n",
       "      <td>2</td>\n",
       "      <td>817901411243655168</td>\n",
       "      <td>MUISCA</td>\n",
       "      <td>ZerofeeCLN</td>\n",
       "      <td>72001792</td>\n",
       "      <td>72001720</td>\n",
       "      <td>0.072</td>\n",
       "      <td>817904709708283904</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-07-07 23:53:51</th>\n",
       "      <td>3</td>\n",
       "      <td>817901411243655168</td>\n",
       "      <td>MUISCA</td>\n",
       "      <td>ZerofeeCLN</td>\n",
       "      <td>72001792</td>\n",
       "      <td>72001720</td>\n",
       "      <td>0.072</td>\n",
       "      <td>817904709708283904</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-07-07 23:54:05</th>\n",
       "      <td>4</td>\n",
       "      <td>817901411243655168</td>\n",
       "      <td>MUISCA</td>\n",
       "      <td>ZerofeeCLN</td>\n",
       "      <td>72001792</td>\n",
       "      <td>72001720</td>\n",
       "      <td>0.072</td>\n",
       "      <td>817904709708283904</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-07-08 16:31:36</th>\n",
       "      <td>5</td>\n",
       "      <td>817425322679402496</td>\n",
       "      <td>LightningNetwork.Plus</td>\n",
       "      <td>WalletOfSatoshi.com</td>\n",
       "      <td>150016500</td>\n",
       "      <td>150001500</td>\n",
       "      <td>15.000</td>\n",
       "      <td>818212573014982656</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     id          chan_id_in          chan_in_alias  \\\n",
       "forward_date                                                         \n",
       "2022-07-07 23:53:21   1  817901411243655168                 MUISCA   \n",
       "2022-07-07 23:53:36   2  817901411243655168                 MUISCA   \n",
       "2022-07-07 23:53:51   3  817901411243655168                 MUISCA   \n",
       "2022-07-07 23:54:05   4  817901411243655168                 MUISCA   \n",
       "2022-07-08 16:31:36   5  817425322679402496  LightningNetwork.Plus   \n",
       "\n",
       "                          chan_out_alias  amt_in_msat  amt_out_msat     fee  \\\n",
       "forward_date                                                                  \n",
       "2022-07-07 23:53:21           ZerofeeCLN     72001792      72001720   0.072   \n",
       "2022-07-07 23:53:36           ZerofeeCLN     72001792      72001720   0.072   \n",
       "2022-07-07 23:53:51           ZerofeeCLN     72001792      72001720   0.072   \n",
       "2022-07-07 23:54:05           ZerofeeCLN     72001792      72001720   0.072   \n",
       "2022-07-08 16:31:36  WalletOfSatoshi.com    150016500     150001500  15.000   \n",
       "\n",
       "                            chan_id_out  \n",
       "forward_date                             \n",
       "2022-07-07 23:53:21  817904709708283904  \n",
       "2022-07-07 23:53:36  817904709708283904  \n",
       "2022-07-07 23:53:51  817904709708283904  \n",
       "2022-07-07 23:54:05  817904709708283904  \n",
       "2022-07-08 16:31:36  818212573014982656  "
      ]
     },
     "execution_count": 189,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fwds_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 190,
   "metadata": {},
   "outputs": [],
   "source": [
    "frequency = 'D'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 191,
   "metadata": {},
   "outputs": [],
   "source": [
    "htlc_count = htlc_df.groupby(pd.Grouper(freq=frequency)).count()['id']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 192,
   "metadata": {},
   "outputs": [],
   "source": [
    "fwds_count = fwds_df.groupby(pd.Grouper(freq=frequency)).count()['id']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 193,
   "metadata": {},
   "outputs": [],
   "source": [
    "# htlc_count"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 194,
   "metadata": {},
   "outputs": [],
   "source": [
    "# fwds_count"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 195,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1800x1080 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "dark"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "labels = htlc_count.index\n",
    "htlc = htlc_count\n",
    "fwds = fwds_count\n",
    "\n",
    "fig, ax = plt.subplots(figsize = (25, 15))\n",
    "\n",
    "ax.bar(labels, fwds, label = 'Failed HTLC', color=['#80D1D9'])\n",
    "ax.bar(labels, htlc, bottom=fwds, label = 'Successfully Forwarded', color=['#D98880'])\n",
    "plt.xticks(rotation=45)\n",
    "plt.legend()\n",
    "ax.set_title(f'BTC', fontsize=30, color='white')\n",
    "\n",
    "plt.yticks(fontsize=30, color='white')\n",
    "plt.xticks(fontsize=30, color='white')\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.7"
  },
  "varInspector": {
   "cols": {
    "lenName": 16,
    "lenType": 16,
    "lenVar": 40
   },
   "kernels_config": {
    "python": {
     "delete_cmd_postfix": "",
     "delete_cmd_prefix": "del ",
     "library": "var_list.py",
     "varRefreshCmd": "print(var_dic_list())"
    },
    "r": {
     "delete_cmd_postfix": ") ",
     "delete_cmd_prefix": "rm(",
     "library": "var_list.r",
     "varRefreshCmd": "cat(var_dic_list()) "
    }
   },
   "types_to_exclude": [
    "module",
    "function",
    "builtin_function_or_method",
    "instance",
    "_Feature"
   ],
   "window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
